"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const react_1 = require("react");
const lodash_1 = require("lodash");
const classnames_1 = require("classnames");
const InMultipeSelect = (props, ref) => {
    const { selectData, getSelectedData } = props;
    const [isShowSelect, setIsShowSelect] = (0, react_1.useState)(false);
    const [numArr, setNumArr] = (0, react_1.useState)(new Array(selectData.length).fill(false));
    const [selectDataArr, setSelectDataArr] = (0, react_1.useState)(selectData);
    const handleCancel = () => {
        setIsShowSelect(false);
    };
    const handleConfirm = () => {
        setIsShowSelect(false);
        const arr = selectDataArr.filter((item) => item.selected);
        getSelectedData === null || getSelectedData === void 0 ? void 0 : getSelectedData(arr);
    };
    const handleSelect = (index) => {
        setNumArr((arr) => {
            const newArr = [...arr];
            if (newArr[index]) {
                newArr[index] = false;
            }
            else {
                newArr[index] = true;
            }
            return newArr;
        });
        setSelectDataArr((originData) => {
            const arr = [...originData];
            if (arr[index].selected) {
                arr[index].selected = false;
            }
            else {
                arr[index].selected = true;
            }
            return arr;
        });
    };
    const handleShow = () => {
        setIsShowSelect(true);
    };
    (0, react_1.useImperativeHandle)(ref, () => ({
        handleShow,
    }));
    return (react_1.default.createElement("div", null, isShowSelect && (react_1.default.createElement("div", { className: " fixed top-0 bottom-0 left-0 right-0" },
        react_1.default.createElement("div", { className: " w-full h-40% bg-slate-100 absolute bottom-0 rounded p-[10px]" },
            react_1.default.createElement("div", { className: " flex" },
                react_1.default.createElement("div", { className: " flex-1", onClick: handleCancel }, "\u53D6\u6D88"),
                react_1.default.createElement("div", { onClick: handleConfirm }, "\u786E\u5B9A")),
            react_1.default.createElement("div", { className: " flex flex-wrap gap-2 pt-4" }, !(0, lodash_1.isEmpty)(selectDataArr) &&
                selectDataArr.map((item, index) => {
                    return (react_1.default.createElement("span", { key: index, className: (0, classnames_1.default)(" bg-slate-200 py-[6px] px-[20px] rounded ", numArr[index] ? " bg-red-400 text-white" : " "), onClick: () => handleSelect(index) }, item.label));
                })))))));
};
const MultipeSelect = react_1.default.forwardRef(InMultipeSelect);
exports.default = MultipeSelect;
