import React, { useImperativeHandle, useState } from "react";
import { isEmpty } from "lodash";
import classNames from "classnames";
const InMultipeSelect = (props, ref) => {
    const { selectData, getSelectedData } = props;
    const [isShowSelect, setIsShowSelect] = useState(false);
    const [numArr, setNumArr] = useState(new Array(selectData.length).fill(false));
    const [selectDataArr, setSelectDataArr] = useState(selectData);
    const handleCancel = () => {
        setIsShowSelect(false);
    };
    const handleConfirm = () => {
        setIsShowSelect(false);
        const arr = selectDataArr.filter((item) => item.selected);
        getSelectedData === null || getSelectedData === void 0 ? void 0 : getSelectedData(arr);
    };
    const handleSelect = (index) => {
        setNumArr((arr) => {
            const newArr = [...arr];
            if (newArr[index]) {
                newArr[index] = false;
            }
            else {
                newArr[index] = true;
            }
            return newArr;
        });
        setSelectDataArr((originData) => {
            const arr = [...originData];
            if (arr[index].selected) {
                arr[index].selected = false;
            }
            else {
                arr[index].selected = true;
            }
            return arr;
        });
    };
    const handleShow = () => {
        setIsShowSelect(true);
    };
    useImperativeHandle(ref, () => ({
        handleShow,
    }));
    return (React.createElement("div", null, isShowSelect && (React.createElement("div", { className: " fixed top-0 bottom-0 left-0 right-0" },
        React.createElement("div", { className: " w-full h-40% bg-slate-100 absolute bottom-0 rounded p-[10px]" },
            React.createElement("div", { className: " flex" },
                React.createElement("div", { className: " flex-1", onClick: handleCancel }, "\u53D6\u6D88"),
                React.createElement("div", { onClick: handleConfirm }, "\u786E\u5B9A")),
            React.createElement("div", { className: " flex flex-wrap gap-2 pt-4" }, !isEmpty(selectDataArr) &&
                selectDataArr.map((item, index) => {
                    return (React.createElement("span", { key: index, className: classNames(" bg-slate-200 py-[6px] px-[20px] rounded ", numArr[index] ? " bg-red-400 text-white" : " "), onClick: () => handleSelect(index) }, item.label));
                })))))));
};
const MultipeSelect = React.forwardRef(InMultipeSelect);
export default MultipeSelect;
