import React, { useRef, useImperativeHandle } from "react";
import RadioSelect from "./components/radioSelect";
import MultipeSelect from "./components/multipleSelect";
const InSelect = (props, ref) => {
    const { selectData, isRadio = true, getSelectedData } = props;
    const radioSelectRef = useRef(null);
    const multipleSelectRef = useRef(null);
    const open = () => {
        var _a, _b;
        if (isRadio) {
            (_a = radioSelectRef.current) === null || _a === void 0 ? void 0 : _a.handleShow();
        }
        else {
            (_b = multipleSelectRef.current) === null || _b === void 0 ? void 0 : _b.handleShow();
        }
    };
    useImperativeHandle(ref, () => ({ open }));
    if (isRadio) {
        return (React.createElement("div", null,
            React.createElement(RadioSelect, { ref: radioSelectRef, selectData: selectData, getSelectedData: getSelectedData })));
    }
    return (React.createElement("div", null,
        React.createElement(MultipeSelect, { ref: multipleSelectRef, selectData: selectData, getSelectedData: getSelectedData })));
};
const Select = React.forwardRef(InSelect);
export default Select;
