var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  // If the importer is in node compatibility mode or this is not an ESM
  // file that has been converted to a CommonJS file using a Babel-
  // compatible transform (i.e. "__esModule" has not been set), then set
  // "default" to the CommonJS "module.exports" for node compatibility.
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
  mod
));
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/EditableTable.tsx
var EditableTable_exports = {};
__export(EditableTable_exports, {
  default: () => EditableTable_default
});
module.exports = __toCommonJS(EditableTable_exports);
var import_antd = require("antd");
var import_lodash = require("lodash");
var import_get = __toESM(require("lodash/get"));
var import_useMemo = __toESM(require("rc-util/lib/hooks/useMemo"));
var import_react = __toESM(require("react"));
var import_EditableCell = __toESM(require("./components/EditableCell"));
var import_useEditableColumns = __toESM(require("./hooks/useEditableColumns"));
function EditableTable({
  components,
  columns,
  editorComponents,
  dataSource,
  virtual,
  onSave,
  ...tableRestProps
}, ref) {
  const editableColumns = (0, import_useEditableColumns.default)({
    columns,
    dataSource,
    onSave
  });
  const cellComponent = (0, import_react.useMemo)(
    () => (0, import_get.default)(components, ["body", "cell"]) || (virtual ? "div" : "td"),
    [components, virtual]
  );
  const Cell = (0, import_useMemo.default)(
    () => {
      return (props) => /* @__PURE__ */ import_react.default.createElement(
        import_EditableCell.default,
        {
          ...props,
          cellComponent,
          editorComponents
        }
      );
    },
    [cellComponent, editorComponents],
    (prev, next) => !(0, import_lodash.isEqual)(prev, next)
  );
  return /* @__PURE__ */ import_react.default.createElement(
    import_antd.Table,
    {
      ref,
      bordered: true,
      size: "small",
      virtual,
      ...tableRestProps,
      dataSource,
      components: {
        ...components,
        body: {
          ...components == null ? void 0 : components.body,
          cell: Cell
        }
      },
      columns: editableColumns
    }
  );
}
var EditableTable_default = import_react.default.forwardRef(EditableTable);
