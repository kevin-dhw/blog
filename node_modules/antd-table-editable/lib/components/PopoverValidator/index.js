var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  // If the importer is in node compatibility mode or this is not an ESM
  // file that has been converted to a CommonJS file using a Babel-
  // compatible transform (i.e. "__esModule" has not been set), then set
  // "default" to the CommonJS "module.exports" for node compatibility.
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
  mod
));
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/components/PopoverValidator/index.tsx
var PopoverValidator_exports = {};
__export(PopoverValidator_exports, {
  default: () => PopoverValidator_default
});
module.exports = __toCommonJS(PopoverValidator_exports);
var import_antd = require("antd");
var import_react = __toESM(require("react"));
function useDelayStatus(errors) {
  const [delayErrors, setDelayErrors] = (0, import_react.useState)(errors);
  (0, import_react.useEffect)(() => {
    if (errors.length) {
      setDelayErrors(errors);
    } else {
      const timeout = setTimeout(() => {
        setDelayErrors(errors);
      });
      return () => {
        clearTimeout(timeout);
      };
    }
  }, [errors]);
  return delayErrors;
}
var PopoverValidator = ({ content, ...props }) => {
  const { errors } = import_antd.Form.Item.useStatus();
  const delayErrors = useDelayStatus(errors);
  return /* @__PURE__ */ import_react.default.createElement(
    import_antd.Popover,
    {
      ...props,
      content: content ? content(delayErrors) : /* @__PURE__ */ import_react.default.createElement(import_antd.Typography.Text, { type: "danger" }, delayErrors[0]),
      open: delayErrors.length > 0
    }
  );
};
var PopoverValidator_default = PopoverValidator;
