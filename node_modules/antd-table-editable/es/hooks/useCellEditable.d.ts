import { FormItemProps, FormProps } from 'antd';
import { HTMLAttributes, HTMLProps } from 'react';
import { EditableCellProps } from '../interface';
type UseCellEditableProps<RecordType> = Omit<EditableCellProps<RecordType>, 'render' | 'editorComponents'>;
export default function useCellEditable<RecordType>({ value, index, children, field, record, fieldProps: propsFieldProps, formItemProps: propsFormItemProps, editorType, cellComponent: CellComponent, onClick, onSave, ...restProps }: UseCellEditableProps<RecordType>): {
    mode: "read" | "edit";
    selected: boolean;
    setMode: import("react").Dispatch<import("react").SetStateAction<"read" | "edit">>;
    setSelected: import("react").Dispatch<import("react").SetStateAction<boolean>>;
    render: (content: React.ReactNode, params?: {
        cellProps?: HTMLProps<HTMLTableCellElement> | undefined;
        formProps?: FormProps<any> | undefined;
        formItemProps?: FormItemProps<any> | undefined;
    } | undefined) => import("react/jsx-runtime").JSX.Element;
    form: import("antd").FormInstance<any>;
    fieldProps: any;
    cellProps: HTMLAttributes<HTMLTableCellElement>;
};
export {};
